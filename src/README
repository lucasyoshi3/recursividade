01) Criar uma aplicação em Java que tenha uma função recursiva que
calcule o somatório do N primeiros número NATURAIS (a função deve
retornar zero para números negativos)

02)Criar uma aplicação em Java que tenha uma função recursiva que,
recebendo um número inteiro, converta para binário.

03)Criar uma aplicação em Java que tenha uma função recursiva que,
recebendo um número inteiro (N), apresente a saída da somatória
s=1+(1/2)+(1/3)+(1/4)+...+(1/n)

04)Criar uma aplicação em Java que tenha uma função recursiva que,
recebendo um numero inteiro de 10 a 999999 e recebendo um 2º
número inteiro (de 0 a 9), tenha uma função recursiva que apresente
quantas vezes o 2º número aparece no primeiro.
• Exemplo1: 1º. Número = 523578; 2º. Número = 5; retorno aparece 2 vezes
• Exemplo2: 1º. Número = 836363; 2º. Número = 3; retorno aparece 3 vezes

05)Considere a série de Fibonacci:
• 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...
Escrever uma função recursiva que, dado uma posição da série, a função
retorne seu valor. Entrada limitada a 20.

06)Escrever uma função recursiva que, dado uma posição da série, a função
retorne seu valor. Entrada limitada a 20.
s=1+(1/2!)+(1/3!)+(1/4!)+...(1/n!).
